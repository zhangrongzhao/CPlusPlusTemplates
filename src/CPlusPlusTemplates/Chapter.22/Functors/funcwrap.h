#include "../stdafx.h"

#ifndef FUNCTION_WRAPPER_H
#define FUNCTION_WRAPPER_H

#include <vector>
#include <iostream>
#include <cstdlib>

//用于把函数指针封装为函数对象的封装类
template<int (*FP)()>
class FunctionReturningIntWrapper{
public:
	int operator()(){
		return FP();
	}
};

//要进行封装的函数实例
int random_int(){
	return std::rand();//调用标准的C函数
}

//客户端，它使用由模板参数传递进来的函数对象类型
template<typename FO>
void initialize(std::vector<int>& coll){
	FO fo;//创建函数对象
	for (std::vector<int>::size_type i = 0; i < coll.size();++i){
		coll[i] = fo();//调用由函数对象表示的函数
	}
}

#endif//FUNCTION_WRAPPER_H